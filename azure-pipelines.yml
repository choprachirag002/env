# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-18.04 


stages:
  - stage: Build
    jobs:
      - job: BuildSpringbootApp
        displayName: 'Building spring boot app'      
        steps:
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.8'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: 'package'
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)'
            Contents: '**/target/*.?(war|jar)'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: PublishPipelineArtifact@0
          displayName: 'Publish pipeline artifacts'
          inputs:
            artifactName: 'drop'
            targetPath: '$(Build.ArtifactStagingDirectory)'
  - stage: DeployDEv
    displayName: 'Deploying to Dev env'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployLinuxWebApp
        displayName: 'deploy to linux web app'
        environment: 'staging'
        strategy:
          runOnce:
            deploy:
              steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  buildType: 'current'
                  targetPath: '$(Pipeline.Workspace)'
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'envconnection'
                  appType: 'webAppLinux'
                  appName: 'myportfolio-dev'
                  package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
  - stage: ProductionDEv
    displayName: 'Deploying to Pd env'
    dependsOn: DeployDEv
    condition: succeeded()
    jobs:
      - deployment: DeployLinuxWebApp
        displayName: 'deploy to production linux web app'
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  buildType: 'current'
                  targetPath: '$(Pipeline.Workspace)'
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'envconnection'
                  appType: 'webAppLinux'
                  appName: 'myportfolio-webapp-prod'
                  package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
              
  